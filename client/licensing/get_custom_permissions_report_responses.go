// Code generated by go-swagger; DO NOT EDIT.

package licensing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-openapi-client-go/models"
)

// GetCustomPermissionsReportReader is a Reader for the GetCustomPermissionsReport structure.
type GetCustomPermissionsReportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomPermissionsReportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 500:
		result := NewGetCustomPermissionsReportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /licensing/custom-permissions] getCustomPermissionsReport", response, response.Code())
	}
}

// NewGetCustomPermissionsReportInternalServerError creates a GetCustomPermissionsReportInternalServerError with default headers values
func NewGetCustomPermissionsReportInternalServerError() *GetCustomPermissionsReportInternalServerError {
	return &GetCustomPermissionsReportInternalServerError{}
}

/*
GetCustomPermissionsReportInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetCustomPermissionsReportInternalServerError struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this get custom permissions report internal server error response has a 2xx status code
func (o *GetCustomPermissionsReportInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get custom permissions report internal server error response has a 3xx status code
func (o *GetCustomPermissionsReportInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get custom permissions report internal server error response has a 4xx status code
func (o *GetCustomPermissionsReportInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get custom permissions report internal server error response has a 5xx status code
func (o *GetCustomPermissionsReportInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get custom permissions report internal server error response a status code equal to that given
func (o *GetCustomPermissionsReportInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get custom permissions report internal server error response
func (o *GetCustomPermissionsReportInternalServerError) Code() int {
	return 500
}

func (o *GetCustomPermissionsReportInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /licensing/custom-permissions][%d] getCustomPermissionsReportInternalServerError %s", 500, payload)
}

func (o *GetCustomPermissionsReportInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /licensing/custom-permissions][%d] getCustomPermissionsReportInternalServerError %s", 500, payload)
}

func (o *GetCustomPermissionsReportInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetCustomPermissionsReportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
