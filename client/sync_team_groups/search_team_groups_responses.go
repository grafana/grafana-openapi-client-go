// Code generated by go-swagger; DO NOT EDIT.

package sync_team_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-openapi-client-go/models"
)

// SearchTeamGroupsReader is a Reader for the SearchTeamGroups structure.
type SearchTeamGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchTeamGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchTeamGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchTeamGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchTeamGroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchTeamGroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchTeamGroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /teams/{teamId}/groups/search] searchTeamGroups", response, response.Code())
	}
}

// NewSearchTeamGroupsOK creates a SearchTeamGroupsOK with default headers values
func NewSearchTeamGroupsOK() *SearchTeamGroupsOK {
	return &SearchTeamGroupsOK{}
}

/*
SearchTeamGroupsOK describes a response with status code 200, with default header values.

(empty)
*/
type SearchTeamGroupsOK struct {
	Payload *models.SearchTeamGroupsQueryResult
}

// IsSuccess returns true when this search team groups Ok response has a 2xx status code
func (o *SearchTeamGroupsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search team groups Ok response has a 3xx status code
func (o *SearchTeamGroupsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search team groups Ok response has a 4xx status code
func (o *SearchTeamGroupsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search team groups Ok response has a 5xx status code
func (o *SearchTeamGroupsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search team groups Ok response a status code equal to that given
func (o *SearchTeamGroupsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the search team groups Ok response
func (o *SearchTeamGroupsOK) Code() int {
	return 200
}

func (o *SearchTeamGroupsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /teams/{teamId}/groups/search][%d] searchTeamGroupsOk %s", 200, payload)
}

func (o *SearchTeamGroupsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /teams/{teamId}/groups/search][%d] searchTeamGroupsOk %s", 200, payload)
}

func (o *SearchTeamGroupsOK) GetPayload() *models.SearchTeamGroupsQueryResult {
	return o.Payload
}

func (o *SearchTeamGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SearchTeamGroupsQueryResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchTeamGroupsBadRequest creates a SearchTeamGroupsBadRequest with default headers values
func NewSearchTeamGroupsBadRequest() *SearchTeamGroupsBadRequest {
	return &SearchTeamGroupsBadRequest{}
}

/*
SearchTeamGroupsBadRequest describes a response with status code 400, with default header values.

BadRequestError is returned when the request is invalid and it cannot be processed.
*/
type SearchTeamGroupsBadRequest struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this search team groups bad request response has a 2xx status code
func (o *SearchTeamGroupsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search team groups bad request response has a 3xx status code
func (o *SearchTeamGroupsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search team groups bad request response has a 4xx status code
func (o *SearchTeamGroupsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search team groups bad request response has a 5xx status code
func (o *SearchTeamGroupsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search team groups bad request response a status code equal to that given
func (o *SearchTeamGroupsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the search team groups bad request response
func (o *SearchTeamGroupsBadRequest) Code() int {
	return 400
}

func (o *SearchTeamGroupsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /teams/{teamId}/groups/search][%d] searchTeamGroupsBadRequest %s", 400, payload)
}

func (o *SearchTeamGroupsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /teams/{teamId}/groups/search][%d] searchTeamGroupsBadRequest %s", 400, payload)
}

func (o *SearchTeamGroupsBadRequest) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *SearchTeamGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchTeamGroupsUnauthorized creates a SearchTeamGroupsUnauthorized with default headers values
func NewSearchTeamGroupsUnauthorized() *SearchTeamGroupsUnauthorized {
	return &SearchTeamGroupsUnauthorized{}
}

/*
SearchTeamGroupsUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type SearchTeamGroupsUnauthorized struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this search team groups unauthorized response has a 2xx status code
func (o *SearchTeamGroupsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search team groups unauthorized response has a 3xx status code
func (o *SearchTeamGroupsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search team groups unauthorized response has a 4xx status code
func (o *SearchTeamGroupsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search team groups unauthorized response has a 5xx status code
func (o *SearchTeamGroupsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search team groups unauthorized response a status code equal to that given
func (o *SearchTeamGroupsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the search team groups unauthorized response
func (o *SearchTeamGroupsUnauthorized) Code() int {
	return 401
}

func (o *SearchTeamGroupsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /teams/{teamId}/groups/search][%d] searchTeamGroupsUnauthorized %s", 401, payload)
}

func (o *SearchTeamGroupsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /teams/{teamId}/groups/search][%d] searchTeamGroupsUnauthorized %s", 401, payload)
}

func (o *SearchTeamGroupsUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *SearchTeamGroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchTeamGroupsForbidden creates a SearchTeamGroupsForbidden with default headers values
func NewSearchTeamGroupsForbidden() *SearchTeamGroupsForbidden {
	return &SearchTeamGroupsForbidden{}
}

/*
SearchTeamGroupsForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type SearchTeamGroupsForbidden struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this search team groups forbidden response has a 2xx status code
func (o *SearchTeamGroupsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search team groups forbidden response has a 3xx status code
func (o *SearchTeamGroupsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search team groups forbidden response has a 4xx status code
func (o *SearchTeamGroupsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this search team groups forbidden response has a 5xx status code
func (o *SearchTeamGroupsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this search team groups forbidden response a status code equal to that given
func (o *SearchTeamGroupsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the search team groups forbidden response
func (o *SearchTeamGroupsForbidden) Code() int {
	return 403
}

func (o *SearchTeamGroupsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /teams/{teamId}/groups/search][%d] searchTeamGroupsForbidden %s", 403, payload)
}

func (o *SearchTeamGroupsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /teams/{teamId}/groups/search][%d] searchTeamGroupsForbidden %s", 403, payload)
}

func (o *SearchTeamGroupsForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *SearchTeamGroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchTeamGroupsInternalServerError creates a SearchTeamGroupsInternalServerError with default headers values
func NewSearchTeamGroupsInternalServerError() *SearchTeamGroupsInternalServerError {
	return &SearchTeamGroupsInternalServerError{}
}

/*
SearchTeamGroupsInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type SearchTeamGroupsInternalServerError struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this search team groups internal server error response has a 2xx status code
func (o *SearchTeamGroupsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search team groups internal server error response has a 3xx status code
func (o *SearchTeamGroupsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search team groups internal server error response has a 4xx status code
func (o *SearchTeamGroupsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search team groups internal server error response has a 5xx status code
func (o *SearchTeamGroupsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search team groups internal server error response a status code equal to that given
func (o *SearchTeamGroupsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the search team groups internal server error response
func (o *SearchTeamGroupsInternalServerError) Code() int {
	return 500
}

func (o *SearchTeamGroupsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /teams/{teamId}/groups/search][%d] searchTeamGroupsInternalServerError %s", 500, payload)
}

func (o *SearchTeamGroupsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /teams/{teamId}/groups/search][%d] searchTeamGroupsInternalServerError %s", 500, payload)
}

func (o *SearchTeamGroupsInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *SearchTeamGroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
