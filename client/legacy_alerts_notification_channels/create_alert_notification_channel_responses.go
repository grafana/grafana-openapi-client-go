// Code generated by go-swagger; DO NOT EDIT.

package legacy_alerts_notification_channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-openapi-client-go/models"
)

// CreateAlertNotificationChannelReader is a Reader for the CreateAlertNotificationChannel structure.
type CreateAlertNotificationChannelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAlertNotificationChannelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateAlertNotificationChannelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateAlertNotificationChannelUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateAlertNotificationChannelForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateAlertNotificationChannelConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateAlertNotificationChannelInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /alert-notifications] createAlertNotificationChannel", response, response.Code())
	}
}

// NewCreateAlertNotificationChannelOK creates a CreateAlertNotificationChannelOK with default headers values
func NewCreateAlertNotificationChannelOK() *CreateAlertNotificationChannelOK {
	return &CreateAlertNotificationChannelOK{}
}

/*
CreateAlertNotificationChannelOK describes a response with status code 200, with default header values.

(empty)
*/
type CreateAlertNotificationChannelOK struct {
	Payload *models.AlertNotification
}

// IsSuccess returns true when this create alert notification channel Ok response has a 2xx status code
func (o *CreateAlertNotificationChannelOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create alert notification channel Ok response has a 3xx status code
func (o *CreateAlertNotificationChannelOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create alert notification channel Ok response has a 4xx status code
func (o *CreateAlertNotificationChannelOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create alert notification channel Ok response has a 5xx status code
func (o *CreateAlertNotificationChannelOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create alert notification channel Ok response a status code equal to that given
func (o *CreateAlertNotificationChannelOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create alert notification channel Ok response
func (o *CreateAlertNotificationChannelOK) Code() int {
	return 200
}

func (o *CreateAlertNotificationChannelOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /alert-notifications][%d] createAlertNotificationChannelOk %s", 200, payload)
}

func (o *CreateAlertNotificationChannelOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /alert-notifications][%d] createAlertNotificationChannelOk %s", 200, payload)
}

func (o *CreateAlertNotificationChannelOK) GetPayload() *models.AlertNotification {
	return o.Payload
}

func (o *CreateAlertNotificationChannelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AlertNotification)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAlertNotificationChannelUnauthorized creates a CreateAlertNotificationChannelUnauthorized with default headers values
func NewCreateAlertNotificationChannelUnauthorized() *CreateAlertNotificationChannelUnauthorized {
	return &CreateAlertNotificationChannelUnauthorized{}
}

/*
CreateAlertNotificationChannelUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type CreateAlertNotificationChannelUnauthorized struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this create alert notification channel unauthorized response has a 2xx status code
func (o *CreateAlertNotificationChannelUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create alert notification channel unauthorized response has a 3xx status code
func (o *CreateAlertNotificationChannelUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create alert notification channel unauthorized response has a 4xx status code
func (o *CreateAlertNotificationChannelUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create alert notification channel unauthorized response has a 5xx status code
func (o *CreateAlertNotificationChannelUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create alert notification channel unauthorized response a status code equal to that given
func (o *CreateAlertNotificationChannelUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create alert notification channel unauthorized response
func (o *CreateAlertNotificationChannelUnauthorized) Code() int {
	return 401
}

func (o *CreateAlertNotificationChannelUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /alert-notifications][%d] createAlertNotificationChannelUnauthorized %s", 401, payload)
}

func (o *CreateAlertNotificationChannelUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /alert-notifications][%d] createAlertNotificationChannelUnauthorized %s", 401, payload)
}

func (o *CreateAlertNotificationChannelUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *CreateAlertNotificationChannelUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAlertNotificationChannelForbidden creates a CreateAlertNotificationChannelForbidden with default headers values
func NewCreateAlertNotificationChannelForbidden() *CreateAlertNotificationChannelForbidden {
	return &CreateAlertNotificationChannelForbidden{}
}

/*
CreateAlertNotificationChannelForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type CreateAlertNotificationChannelForbidden struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this create alert notification channel forbidden response has a 2xx status code
func (o *CreateAlertNotificationChannelForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create alert notification channel forbidden response has a 3xx status code
func (o *CreateAlertNotificationChannelForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create alert notification channel forbidden response has a 4xx status code
func (o *CreateAlertNotificationChannelForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create alert notification channel forbidden response has a 5xx status code
func (o *CreateAlertNotificationChannelForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create alert notification channel forbidden response a status code equal to that given
func (o *CreateAlertNotificationChannelForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create alert notification channel forbidden response
func (o *CreateAlertNotificationChannelForbidden) Code() int {
	return 403
}

func (o *CreateAlertNotificationChannelForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /alert-notifications][%d] createAlertNotificationChannelForbidden %s", 403, payload)
}

func (o *CreateAlertNotificationChannelForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /alert-notifications][%d] createAlertNotificationChannelForbidden %s", 403, payload)
}

func (o *CreateAlertNotificationChannelForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *CreateAlertNotificationChannelForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAlertNotificationChannelConflict creates a CreateAlertNotificationChannelConflict with default headers values
func NewCreateAlertNotificationChannelConflict() *CreateAlertNotificationChannelConflict {
	return &CreateAlertNotificationChannelConflict{}
}

/*
CreateAlertNotificationChannelConflict describes a response with status code 409, with default header values.

ConflictError
*/
type CreateAlertNotificationChannelConflict struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this create alert notification channel conflict response has a 2xx status code
func (o *CreateAlertNotificationChannelConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create alert notification channel conflict response has a 3xx status code
func (o *CreateAlertNotificationChannelConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create alert notification channel conflict response has a 4xx status code
func (o *CreateAlertNotificationChannelConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create alert notification channel conflict response has a 5xx status code
func (o *CreateAlertNotificationChannelConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create alert notification channel conflict response a status code equal to that given
func (o *CreateAlertNotificationChannelConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create alert notification channel conflict response
func (o *CreateAlertNotificationChannelConflict) Code() int {
	return 409
}

func (o *CreateAlertNotificationChannelConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /alert-notifications][%d] createAlertNotificationChannelConflict %s", 409, payload)
}

func (o *CreateAlertNotificationChannelConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /alert-notifications][%d] createAlertNotificationChannelConflict %s", 409, payload)
}

func (o *CreateAlertNotificationChannelConflict) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *CreateAlertNotificationChannelConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAlertNotificationChannelInternalServerError creates a CreateAlertNotificationChannelInternalServerError with default headers values
func NewCreateAlertNotificationChannelInternalServerError() *CreateAlertNotificationChannelInternalServerError {
	return &CreateAlertNotificationChannelInternalServerError{}
}

/*
CreateAlertNotificationChannelInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type CreateAlertNotificationChannelInternalServerError struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this create alert notification channel internal server error response has a 2xx status code
func (o *CreateAlertNotificationChannelInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create alert notification channel internal server error response has a 3xx status code
func (o *CreateAlertNotificationChannelInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create alert notification channel internal server error response has a 4xx status code
func (o *CreateAlertNotificationChannelInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create alert notification channel internal server error response has a 5xx status code
func (o *CreateAlertNotificationChannelInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create alert notification channel internal server error response a status code equal to that given
func (o *CreateAlertNotificationChannelInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create alert notification channel internal server error response
func (o *CreateAlertNotificationChannelInternalServerError) Code() int {
	return 500
}

func (o *CreateAlertNotificationChannelInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /alert-notifications][%d] createAlertNotificationChannelInternalServerError %s", 500, payload)
}

func (o *CreateAlertNotificationChannelInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /alert-notifications][%d] createAlertNotificationChannelInternalServerError %s", 500, payload)
}

func (o *CreateAlertNotificationChannelInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *CreateAlertNotificationChannelInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
