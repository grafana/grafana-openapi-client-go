// Code generated by go-swagger; DO NOT EDIT.

package legacy_alerts_notification_channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-openapi-client-go/models"
)

// GetAlertNotificationChannelByIDReader is a Reader for the GetAlertNotificationChannelByID structure.
type GetAlertNotificationChannelByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAlertNotificationChannelByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAlertNotificationChannelByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAlertNotificationChannelByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAlertNotificationChannelByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAlertNotificationChannelByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAlertNotificationChannelByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /alert-notifications/{notification_channel_id}] getAlertNotificationChannelByID", response, response.Code())
	}
}

// NewGetAlertNotificationChannelByIDOK creates a GetAlertNotificationChannelByIDOK with default headers values
func NewGetAlertNotificationChannelByIDOK() *GetAlertNotificationChannelByIDOK {
	return &GetAlertNotificationChannelByIDOK{}
}

/*
GetAlertNotificationChannelByIDOK describes a response with status code 200, with default header values.

(empty)
*/
type GetAlertNotificationChannelByIDOK struct {
	Payload *models.AlertNotification
}

// IsSuccess returns true when this get alert notification channel by Id Ok response has a 2xx status code
func (o *GetAlertNotificationChannelByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get alert notification channel by Id Ok response has a 3xx status code
func (o *GetAlertNotificationChannelByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alert notification channel by Id Ok response has a 4xx status code
func (o *GetAlertNotificationChannelByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get alert notification channel by Id Ok response has a 5xx status code
func (o *GetAlertNotificationChannelByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get alert notification channel by Id Ok response a status code equal to that given
func (o *GetAlertNotificationChannelByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get alert notification channel by Id Ok response
func (o *GetAlertNotificationChannelByIDOK) Code() int {
	return 200
}

func (o *GetAlertNotificationChannelByIDOK) Error() string {
	return fmt.Sprintf("[GET /alert-notifications/{notification_channel_id}][%d] getAlertNotificationChannelByIdOk  %+v", 200, o.Payload)
}

func (o *GetAlertNotificationChannelByIDOK) String() string {
	return fmt.Sprintf("[GET /alert-notifications/{notification_channel_id}][%d] getAlertNotificationChannelByIdOk  %+v", 200, o.Payload)
}

func (o *GetAlertNotificationChannelByIDOK) GetPayload() *models.AlertNotification {
	return o.Payload
}

func (o *GetAlertNotificationChannelByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AlertNotification)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlertNotificationChannelByIDUnauthorized creates a GetAlertNotificationChannelByIDUnauthorized with default headers values
func NewGetAlertNotificationChannelByIDUnauthorized() *GetAlertNotificationChannelByIDUnauthorized {
	return &GetAlertNotificationChannelByIDUnauthorized{}
}

/*
GetAlertNotificationChannelByIDUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type GetAlertNotificationChannelByIDUnauthorized struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this get alert notification channel by Id unauthorized response has a 2xx status code
func (o *GetAlertNotificationChannelByIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alert notification channel by Id unauthorized response has a 3xx status code
func (o *GetAlertNotificationChannelByIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alert notification channel by Id unauthorized response has a 4xx status code
func (o *GetAlertNotificationChannelByIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get alert notification channel by Id unauthorized response has a 5xx status code
func (o *GetAlertNotificationChannelByIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get alert notification channel by Id unauthorized response a status code equal to that given
func (o *GetAlertNotificationChannelByIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get alert notification channel by Id unauthorized response
func (o *GetAlertNotificationChannelByIDUnauthorized) Code() int {
	return 401
}

func (o *GetAlertNotificationChannelByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /alert-notifications/{notification_channel_id}][%d] getAlertNotificationChannelByIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAlertNotificationChannelByIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /alert-notifications/{notification_channel_id}][%d] getAlertNotificationChannelByIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAlertNotificationChannelByIDUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetAlertNotificationChannelByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlertNotificationChannelByIDForbidden creates a GetAlertNotificationChannelByIDForbidden with default headers values
func NewGetAlertNotificationChannelByIDForbidden() *GetAlertNotificationChannelByIDForbidden {
	return &GetAlertNotificationChannelByIDForbidden{}
}

/*
GetAlertNotificationChannelByIDForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type GetAlertNotificationChannelByIDForbidden struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this get alert notification channel by Id forbidden response has a 2xx status code
func (o *GetAlertNotificationChannelByIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alert notification channel by Id forbidden response has a 3xx status code
func (o *GetAlertNotificationChannelByIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alert notification channel by Id forbidden response has a 4xx status code
func (o *GetAlertNotificationChannelByIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get alert notification channel by Id forbidden response has a 5xx status code
func (o *GetAlertNotificationChannelByIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get alert notification channel by Id forbidden response a status code equal to that given
func (o *GetAlertNotificationChannelByIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get alert notification channel by Id forbidden response
func (o *GetAlertNotificationChannelByIDForbidden) Code() int {
	return 403
}

func (o *GetAlertNotificationChannelByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /alert-notifications/{notification_channel_id}][%d] getAlertNotificationChannelByIdForbidden  %+v", 403, o.Payload)
}

func (o *GetAlertNotificationChannelByIDForbidden) String() string {
	return fmt.Sprintf("[GET /alert-notifications/{notification_channel_id}][%d] getAlertNotificationChannelByIdForbidden  %+v", 403, o.Payload)
}

func (o *GetAlertNotificationChannelByIDForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetAlertNotificationChannelByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlertNotificationChannelByIDNotFound creates a GetAlertNotificationChannelByIDNotFound with default headers values
func NewGetAlertNotificationChannelByIDNotFound() *GetAlertNotificationChannelByIDNotFound {
	return &GetAlertNotificationChannelByIDNotFound{}
}

/*
GetAlertNotificationChannelByIDNotFound describes a response with status code 404, with default header values.

NotFoundError is returned when the requested resource was not found.
*/
type GetAlertNotificationChannelByIDNotFound struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this get alert notification channel by Id not found response has a 2xx status code
func (o *GetAlertNotificationChannelByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alert notification channel by Id not found response has a 3xx status code
func (o *GetAlertNotificationChannelByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alert notification channel by Id not found response has a 4xx status code
func (o *GetAlertNotificationChannelByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get alert notification channel by Id not found response has a 5xx status code
func (o *GetAlertNotificationChannelByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get alert notification channel by Id not found response a status code equal to that given
func (o *GetAlertNotificationChannelByIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get alert notification channel by Id not found response
func (o *GetAlertNotificationChannelByIDNotFound) Code() int {
	return 404
}

func (o *GetAlertNotificationChannelByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /alert-notifications/{notification_channel_id}][%d] getAlertNotificationChannelByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetAlertNotificationChannelByIDNotFound) String() string {
	return fmt.Sprintf("[GET /alert-notifications/{notification_channel_id}][%d] getAlertNotificationChannelByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetAlertNotificationChannelByIDNotFound) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetAlertNotificationChannelByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlertNotificationChannelByIDInternalServerError creates a GetAlertNotificationChannelByIDInternalServerError with default headers values
func NewGetAlertNotificationChannelByIDInternalServerError() *GetAlertNotificationChannelByIDInternalServerError {
	return &GetAlertNotificationChannelByIDInternalServerError{}
}

/*
GetAlertNotificationChannelByIDInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetAlertNotificationChannelByIDInternalServerError struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this get alert notification channel by Id internal server error response has a 2xx status code
func (o *GetAlertNotificationChannelByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alert notification channel by Id internal server error response has a 3xx status code
func (o *GetAlertNotificationChannelByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alert notification channel by Id internal server error response has a 4xx status code
func (o *GetAlertNotificationChannelByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get alert notification channel by Id internal server error response has a 5xx status code
func (o *GetAlertNotificationChannelByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get alert notification channel by Id internal server error response a status code equal to that given
func (o *GetAlertNotificationChannelByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get alert notification channel by Id internal server error response
func (o *GetAlertNotificationChannelByIDInternalServerError) Code() int {
	return 500
}

func (o *GetAlertNotificationChannelByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /alert-notifications/{notification_channel_id}][%d] getAlertNotificationChannelByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAlertNotificationChannelByIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /alert-notifications/{notification_channel_id}][%d] getAlertNotificationChannelByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAlertNotificationChannelByIDInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetAlertNotificationChannelByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
