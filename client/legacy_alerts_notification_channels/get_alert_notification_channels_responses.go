// Code generated by go-swagger; DO NOT EDIT.

package legacy_alerts_notification_channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-openapi-client-go/models"
)

// GetAlertNotificationChannelsReader is a Reader for the GetAlertNotificationChannels structure.
type GetAlertNotificationChannelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAlertNotificationChannelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAlertNotificationChannelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAlertNotificationChannelsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAlertNotificationChannelsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAlertNotificationChannelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /alert-notifications] getAlertNotificationChannels", response, response.Code())
	}
}

// NewGetAlertNotificationChannelsOK creates a GetAlertNotificationChannelsOK with default headers values
func NewGetAlertNotificationChannelsOK() *GetAlertNotificationChannelsOK {
	return &GetAlertNotificationChannelsOK{}
}

/*
GetAlertNotificationChannelsOK describes a response with status code 200, with default header values.

(empty)
*/
type GetAlertNotificationChannelsOK struct {
	Payload []*models.AlertNotification
}

// IsSuccess returns true when this get alert notification channels Ok response has a 2xx status code
func (o *GetAlertNotificationChannelsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get alert notification channels Ok response has a 3xx status code
func (o *GetAlertNotificationChannelsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alert notification channels Ok response has a 4xx status code
func (o *GetAlertNotificationChannelsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get alert notification channels Ok response has a 5xx status code
func (o *GetAlertNotificationChannelsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get alert notification channels Ok response a status code equal to that given
func (o *GetAlertNotificationChannelsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get alert notification channels Ok response
func (o *GetAlertNotificationChannelsOK) Code() int {
	return 200
}

func (o *GetAlertNotificationChannelsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /alert-notifications][%d] getAlertNotificationChannelsOk %s", 200, payload)
}

func (o *GetAlertNotificationChannelsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /alert-notifications][%d] getAlertNotificationChannelsOk %s", 200, payload)
}

func (o *GetAlertNotificationChannelsOK) GetPayload() []*models.AlertNotification {
	return o.Payload
}

func (o *GetAlertNotificationChannelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlertNotificationChannelsUnauthorized creates a GetAlertNotificationChannelsUnauthorized with default headers values
func NewGetAlertNotificationChannelsUnauthorized() *GetAlertNotificationChannelsUnauthorized {
	return &GetAlertNotificationChannelsUnauthorized{}
}

/*
GetAlertNotificationChannelsUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type GetAlertNotificationChannelsUnauthorized struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this get alert notification channels unauthorized response has a 2xx status code
func (o *GetAlertNotificationChannelsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alert notification channels unauthorized response has a 3xx status code
func (o *GetAlertNotificationChannelsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alert notification channels unauthorized response has a 4xx status code
func (o *GetAlertNotificationChannelsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get alert notification channels unauthorized response has a 5xx status code
func (o *GetAlertNotificationChannelsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get alert notification channels unauthorized response a status code equal to that given
func (o *GetAlertNotificationChannelsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get alert notification channels unauthorized response
func (o *GetAlertNotificationChannelsUnauthorized) Code() int {
	return 401
}

func (o *GetAlertNotificationChannelsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /alert-notifications][%d] getAlertNotificationChannelsUnauthorized %s", 401, payload)
}

func (o *GetAlertNotificationChannelsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /alert-notifications][%d] getAlertNotificationChannelsUnauthorized %s", 401, payload)
}

func (o *GetAlertNotificationChannelsUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetAlertNotificationChannelsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlertNotificationChannelsForbidden creates a GetAlertNotificationChannelsForbidden with default headers values
func NewGetAlertNotificationChannelsForbidden() *GetAlertNotificationChannelsForbidden {
	return &GetAlertNotificationChannelsForbidden{}
}

/*
GetAlertNotificationChannelsForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type GetAlertNotificationChannelsForbidden struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this get alert notification channels forbidden response has a 2xx status code
func (o *GetAlertNotificationChannelsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alert notification channels forbidden response has a 3xx status code
func (o *GetAlertNotificationChannelsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alert notification channels forbidden response has a 4xx status code
func (o *GetAlertNotificationChannelsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get alert notification channels forbidden response has a 5xx status code
func (o *GetAlertNotificationChannelsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get alert notification channels forbidden response a status code equal to that given
func (o *GetAlertNotificationChannelsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get alert notification channels forbidden response
func (o *GetAlertNotificationChannelsForbidden) Code() int {
	return 403
}

func (o *GetAlertNotificationChannelsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /alert-notifications][%d] getAlertNotificationChannelsForbidden %s", 403, payload)
}

func (o *GetAlertNotificationChannelsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /alert-notifications][%d] getAlertNotificationChannelsForbidden %s", 403, payload)
}

func (o *GetAlertNotificationChannelsForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetAlertNotificationChannelsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlertNotificationChannelsInternalServerError creates a GetAlertNotificationChannelsInternalServerError with default headers values
func NewGetAlertNotificationChannelsInternalServerError() *GetAlertNotificationChannelsInternalServerError {
	return &GetAlertNotificationChannelsInternalServerError{}
}

/*
GetAlertNotificationChannelsInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetAlertNotificationChannelsInternalServerError struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this get alert notification channels internal server error response has a 2xx status code
func (o *GetAlertNotificationChannelsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alert notification channels internal server error response has a 3xx status code
func (o *GetAlertNotificationChannelsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alert notification channels internal server error response has a 4xx status code
func (o *GetAlertNotificationChannelsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get alert notification channels internal server error response has a 5xx status code
func (o *GetAlertNotificationChannelsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get alert notification channels internal server error response a status code equal to that given
func (o *GetAlertNotificationChannelsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get alert notification channels internal server error response
func (o *GetAlertNotificationChannelsInternalServerError) Code() int {
	return 500
}

func (o *GetAlertNotificationChannelsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /alert-notifications][%d] getAlertNotificationChannelsInternalServerError %s", 500, payload)
}

func (o *GetAlertNotificationChannelsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /alert-notifications][%d] getAlertNotificationChannelsInternalServerError %s", 500, payload)
}

func (o *GetAlertNotificationChannelsInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetAlertNotificationChannelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
