// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ResourceDependencyDTO resource dependency DTO
//
// swagger:model ResourceDependencyDTO
type ResourceDependencyDTO struct {

	// dependencies
	Dependencies []string `json:"dependencies"`

	// resource type
	// Enum: [DASHBOARD DATASOURCE FOLDER LIBRARY_ELEMENT ALERT_RULE ALERT_RULE_GROUP CONTACT_POINT NOTIFICATION_POLICY NOTIFICATION_TEMPLATE MUTE_TIMING PLUGIN]
	ResourceType string `json:"resourceType,omitempty"`
}

// Validate validates this resource dependency DTO
func (m *ResourceDependencyDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDependencies(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResourceType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var resourceDependencyDtoDependenciesItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DASHBOARD","DATASOURCE","FOLDER","LIBRARY_ELEMENT","ALERT_RULE","ALERT_RULE_GROUP","CONTACT_POINT","NOTIFICATION_POLICY","NOTIFICATION_TEMPLATE","MUTE_TIMING","PLUGIN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		resourceDependencyDtoDependenciesItemsEnum = append(resourceDependencyDtoDependenciesItemsEnum, v)
	}
}

func (m *ResourceDependencyDTO) validateDependenciesItemsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, resourceDependencyDtoDependenciesItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ResourceDependencyDTO) validateDependencies(formats strfmt.Registry) error {
	if swag.IsZero(m.Dependencies) { // not required
		return nil
	}

	for i := 0; i < len(m.Dependencies); i++ {

		// value enum
		if err := m.validateDependenciesItemsEnum("dependencies"+"."+strconv.Itoa(i), "body", m.Dependencies[i]); err != nil {
			return err
		}

	}

	return nil
}

var resourceDependencyDtoTypeResourceTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DASHBOARD","DATASOURCE","FOLDER","LIBRARY_ELEMENT","ALERT_RULE","ALERT_RULE_GROUP","CONTACT_POINT","NOTIFICATION_POLICY","NOTIFICATION_TEMPLATE","MUTE_TIMING","PLUGIN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		resourceDependencyDtoTypeResourceTypePropEnum = append(resourceDependencyDtoTypeResourceTypePropEnum, v)
	}
}

const (

	// ResourceDependencyDTOResourceTypeDASHBOARD captures enum value "DASHBOARD"
	ResourceDependencyDTOResourceTypeDASHBOARD string = "DASHBOARD"

	// ResourceDependencyDTOResourceTypeDATASOURCE captures enum value "DATASOURCE"
	ResourceDependencyDTOResourceTypeDATASOURCE string = "DATASOURCE"

	// ResourceDependencyDTOResourceTypeFOLDER captures enum value "FOLDER"
	ResourceDependencyDTOResourceTypeFOLDER string = "FOLDER"

	// ResourceDependencyDTOResourceTypeLIBRARYELEMENT captures enum value "LIBRARY_ELEMENT"
	ResourceDependencyDTOResourceTypeLIBRARYELEMENT string = "LIBRARY_ELEMENT"

	// ResourceDependencyDTOResourceTypeALERTRULE captures enum value "ALERT_RULE"
	ResourceDependencyDTOResourceTypeALERTRULE string = "ALERT_RULE"

	// ResourceDependencyDTOResourceTypeALERTRULEGROUP captures enum value "ALERT_RULE_GROUP"
	ResourceDependencyDTOResourceTypeALERTRULEGROUP string = "ALERT_RULE_GROUP"

	// ResourceDependencyDTOResourceTypeCONTACTPOINT captures enum value "CONTACT_POINT"
	ResourceDependencyDTOResourceTypeCONTACTPOINT string = "CONTACT_POINT"

	// ResourceDependencyDTOResourceTypeNOTIFICATIONPOLICY captures enum value "NOTIFICATION_POLICY"
	ResourceDependencyDTOResourceTypeNOTIFICATIONPOLICY string = "NOTIFICATION_POLICY"

	// ResourceDependencyDTOResourceTypeNOTIFICATIONTEMPLATE captures enum value "NOTIFICATION_TEMPLATE"
	ResourceDependencyDTOResourceTypeNOTIFICATIONTEMPLATE string = "NOTIFICATION_TEMPLATE"

	// ResourceDependencyDTOResourceTypeMUTETIMING captures enum value "MUTE_TIMING"
	ResourceDependencyDTOResourceTypeMUTETIMING string = "MUTE_TIMING"

	// ResourceDependencyDTOResourceTypePLUGIN captures enum value "PLUGIN"
	ResourceDependencyDTOResourceTypePLUGIN string = "PLUGIN"
)

// prop value enum
func (m *ResourceDependencyDTO) validateResourceTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, resourceDependencyDtoTypeResourceTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ResourceDependencyDTO) validateResourceType(formats strfmt.Registry) error {
	if swag.IsZero(m.ResourceType) { // not required
		return nil
	}

	// value enum
	if err := m.validateResourceTypeEnum("resourceType", "body", m.ResourceType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this resource dependency DTO based on context it is used
func (m *ResourceDependencyDTO) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ResourceDependencyDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResourceDependencyDTO) UnmarshalBinary(b []byte) error {
	var res ResourceDependencyDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
